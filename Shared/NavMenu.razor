@inject NavigationManager NavManager

<div class="top-row ps-3 navbar navbar-dark">
	<div class="container-fluid">
		<a class="navbar-brand" href="">IMS</a>
		<button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
			<span class="navbar-toggler-icon"></span>
		</button>
	</div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
	<nav class="flex-column">
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
				<span class="oi oi-home" aria-hidden="true"></span> Home
			</NavLink>
		</div>

		<div class="nav-item px-3">
			<NavLink class="nav-link" href="counter">
				<span class="oi oi-plus" aria-hidden="true"></span> Counter
			</NavLink>
		</div>

		<div class="nav-item px-3">
			<NavLink class="nav-link" href="register">
				<span class="oi oi-person" aria-hidden="true"></span> Register User
			</NavLink>
		</div>

		<div class="nav-item px-3">
			<NavLink class="nav-link text-danger" role="button" @onclick="LogoutHandler">
				<span class="oi oi-account-logout" /> Logout
			</NavLink>
		</div>
	</nav>
</div>

@code {
	// For logout
	[CascadingParameter]
	private GlobalState _globalState { get; set; }
	// For logout

	private bool collapseNavMenu = true;

	private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

	private void ToggleNavMenu()
	{
		collapseNavMenu = !collapseNavMenu;
	}

	// For logout
	private void LogoutHandler()
	{
		// _globalState.CurrentUser = null;
		NavManager.NavigateTo("/login");
	}
	// For logout
}
